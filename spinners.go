// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots, using data from:
// https://raw.githubusercontent.com/sindresorhus/cli-spinners/master/spinners.json
package spinners

import (
	"fmt"
	"io"
)

type spinnerFactory func(writer io.Writer) *Spinner

var factories = map[string]spinnerFactory{
	"arc":                 NewArcSpinner,
	"arrow":               NewArrowSpinner,
	"arrow2":              NewArrow2Spinner,
	"arrow3":              NewArrow3Spinner,
	"balloon":             NewBalloonSpinner,
	"balloon2":            NewBalloon2Spinner,
	"bounce":              NewBounceSpinner,
	"bouncingBall":        NewBouncingBallSpinner,
	"bouncingBar":         NewBouncingBarSpinner,
	"boxBounce":           NewBoxBounceSpinner,
	"boxBounce2":          NewBoxBounce2Spinner,
	"christmas":           NewChristmasSpinner,
	"circle":              NewCircleSpinner,
	"circleHalves":        NewCircleHalvesSpinner,
	"circleQuarters":      NewCircleQuartersSpinner,
	"clock":               NewClockSpinner,
	"dots":                NewDotsSpinner,
	"dots10":              NewDots10Spinner,
	"dots11":              NewDots11Spinner,
	"dots12":              NewDots12Spinner,
	"dots2":               NewDots2Spinner,
	"dots3":               NewDots3Spinner,
	"dots4":               NewDots4Spinner,
	"dots5":               NewDots5Spinner,
	"dots6":               NewDots6Spinner,
	"dots7":               NewDots7Spinner,
	"dots8":               NewDots8Spinner,
	"dots9":               NewDots9Spinner,
	"dqpb":                NewDqpbSpinner,
	"earth":               NewEarthSpinner,
	"flip":                NewFlipSpinner,
	"growHorizontal":      NewGrowHorizontalSpinner,
	"growVertical":        NewGrowVerticalSpinner,
	"hamburger":           NewHamburgerSpinner,
	"hearts":              NewHeartsSpinner,
	"line":                NewLineSpinner,
	"line2":               NewLine2Spinner,
	"monkey":              NewMonkeySpinner,
	"moon":                NewMoonSpinner,
	"noise":               NewNoiseSpinner,
	"pipe":                NewPipeSpinner,
	"pong":                NewPongSpinner,
	"runner":              NewRunnerSpinner,
	"shark":               NewSharkSpinner,
	"simpleDots":          NewSimpleDotsSpinner,
	"simpleDotsScrolling": NewSimpleDotsScrollingSpinner,
	"smiley":              NewSmileySpinner,
	"squareCorners":       NewSquareCornersSpinner,
	"squish":              NewSquishSpinner,
	"star":                NewStarSpinner,
	"star2":               NewStar2Spinner,
	"toggle":              NewToggleSpinner,
	"toggle10":            NewToggle10Spinner,
	"toggle11":            NewToggle11Spinner,
	"toggle12":            NewToggle12Spinner,
	"toggle13":            NewToggle13Spinner,
	"toggle2":             NewToggle2Spinner,
	"toggle3":             NewToggle3Spinner,
	"toggle4":             NewToggle4Spinner,
	"toggle5":             NewToggle5Spinner,
	"toggle6":             NewToggle6Spinner,
	"toggle7":             NewToggle7Spinner,
	"toggle8":             NewToggle8Spinner,
	"toggle9":             NewToggle9Spinner,
	"triangle":            NewTriangleSpinner,
	"weather":             NewWeatherSpinner,
}

// NewSpinnerByName returns the spinner with the given name
func NewSpinnerByName(name string, writer io.Writer) (*Spinner, error) {
	factory, found := factories[name]
	if !found {
		return nil, fmt.Errorf("could not find spinner with name %s", name)
	}

	return factory(writer), nil
}

// NewArcSpinner creates a new arc spinner
func NewArcSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚óú",
		"‚ó†",
		"‚óù",
		"‚óû",
		"‚ó°",
		"‚óü",
	}}
	return NewSpinner(configuration, writer)
}

// NewArrowSpinner creates a new arrow spinner
func NewArrowSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚Üê",
		"‚Üñ",
		"‚Üë",
		"‚Üó",
		"‚Üí",
		"‚Üò",
		"‚Üì",
		"‚Üô",
	}}
	return NewSpinner(configuration, writer)
}

// NewArrow2Spinner creates a new arrow2 spinner
func NewArrow2Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚¨ÜÔ∏è ",
		"‚ÜóÔ∏è ",
		"‚û°Ô∏è ",
		"‚ÜòÔ∏è ",
		"‚¨áÔ∏è ",
		"‚ÜôÔ∏è ",
		"‚¨ÖÔ∏è ",
		"‚ÜñÔ∏è ",
	}}
	return NewSpinner(configuration, writer)
}

// NewArrow3Spinner creates a new arrow3 spinner
func NewArrow3Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 120, Frames: []string{
		"‚ñπ‚ñπ‚ñπ‚ñπ‚ñπ",
		"‚ñ∏‚ñπ‚ñπ‚ñπ‚ñπ",
		"‚ñπ‚ñ∏‚ñπ‚ñπ‚ñπ",
		"‚ñπ‚ñπ‚ñ∏‚ñπ‚ñπ",
		"‚ñπ‚ñπ‚ñπ‚ñ∏‚ñπ",
		"‚ñπ‚ñπ‚ñπ‚ñπ‚ñ∏",
	}}
	return NewSpinner(configuration, writer)
}

// NewBalloonSpinner creates a new balloon spinner
func NewBalloonSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 140, Frames: []string{
		" ",
		".",
		"o",
		"O",
		"@",
		"*",
		" ",
	}}
	return NewSpinner(configuration, writer)
}

// NewBalloon2Spinner creates a new balloon2 spinner
func NewBalloon2Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 120, Frames: []string{
		".",
		"o",
		"O",
		"¬∞",
		"O",
		"o",
		".",
	}}
	return NewSpinner(configuration, writer)
}

// NewBounceSpinner creates a new bounce spinner
func NewBounceSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 120, Frames: []string{
		"‚†Å",
		"‚†Ç",
		"‚†Ñ",
		"‚†Ç",
	}}
	return NewSpinner(configuration, writer)
}

// NewBouncingBallSpinner creates a new bouncingBall spinner
func NewBouncingBallSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"( ‚óè    )",
		"(  ‚óè   )",
		"(   ‚óè  )",
		"(    ‚óè )",
		"(     ‚óè)",
		"(    ‚óè )",
		"(   ‚óè  )",
		"(  ‚óè   )",
		"( ‚óè    )",
		"(‚óè     )",
	}}
	return NewSpinner(configuration, writer)
}

// NewBouncingBarSpinner creates a new bouncingBar spinner
func NewBouncingBarSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"[    ]",
		"[=   ]",
		"[==  ]",
		"[=== ]",
		"[ ===]",
		"[  ==]",
		"[   =]",
		"[    ]",
		"[   =]",
		"[  ==]",
		"[ ===]",
		"[====]",
		"[=== ]",
		"[==  ]",
		"[=   ]",
	}}
	return NewSpinner(configuration, writer)
}

// NewBoxBounceSpinner creates a new boxBounce spinner
func NewBoxBounceSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 120, Frames: []string{
		"‚ññ",
		"‚ñò",
		"‚ñù",
		"‚ñó",
	}}
	return NewSpinner(configuration, writer)
}

// NewBoxBounce2Spinner creates a new boxBounce2 spinner
func NewBoxBounce2Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚ñå",
		"‚ñÄ",
		"‚ñê",
		"‚ñÑ",
	}}
	return NewSpinner(configuration, writer)
}

// NewChristmasSpinner creates a new christmas spinner
func NewChristmasSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 400, Frames: []string{
		"üå≤",
		"üéÑ",
	}}
	return NewSpinner(configuration, writer)
}

// NewCircleSpinner creates a new circle spinner
func NewCircleSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 120, Frames: []string{
		"‚ó°",
		"‚äô",
		"‚ó†",
	}}
	return NewSpinner(configuration, writer)
}

// NewCircleHalvesSpinner creates a new circleHalves spinner
func NewCircleHalvesSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 50, Frames: []string{
		"‚óê",
		"‚óì",
		"‚óë",
		"‚óí",
	}}
	return NewSpinner(configuration, writer)
}

// NewCircleQuartersSpinner creates a new circleQuarters spinner
func NewCircleQuartersSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 120, Frames: []string{
		"‚ó¥",
		"‚ó∑",
		"‚ó∂",
		"‚óµ",
	}}
	return NewSpinner(configuration, writer)
}

// NewClockSpinner creates a new clock spinner
func NewClockSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"üïê ",
		"üïë ",
		"üïí ",
		"üïì ",
		"üïî ",
		"üïï ",
		"üïñ ",
		"üïó ",
		"üïò ",
		"üïô ",
		"üïö ",
	}}
	return NewSpinner(configuration, writer)
}

// NewDotsSpinner creates a new dots spinner
func NewDotsSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚†ã",
		"‚†ô",
		"‚†π",
		"‚†∏",
		"‚†º",
		"‚†¥",
		"‚†¶",
		"‚†ß",
		"‚†á",
		"‚†è",
	}}
	return NewSpinner(configuration, writer)
}

// NewDots10Spinner creates a new dots10 spinner
func NewDots10Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚¢Ñ",
		"‚¢Ç",
		"‚¢Å",
		"‚°Å",
		"‚°à",
		"‚°ê",
		"‚°†",
	}}
	return NewSpinner(configuration, writer)
}

// NewDots11Spinner creates a new dots11 spinner
func NewDots11Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚†Å",
		"‚†Ç",
		"‚†Ñ",
		"‚°Ä",
		"‚¢Ä",
		"‚††",
		"‚†ê",
		"‚†à",
	}}
	return NewSpinner(configuration, writer)
}

// NewDots12Spinner creates a new dots12 spinner
func NewDots12Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚¢Ä‚†Ä",
		"‚°Ä‚†Ä",
		"‚†Ñ‚†Ä",
		"‚¢Ç‚†Ä",
		"‚°Ç‚†Ä",
		"‚†Ö‚†Ä",
		"‚¢É‚†Ä",
		"‚°É‚†Ä",
		"‚†ç‚†Ä",
		"‚¢ã‚†Ä",
		"‚°ã‚†Ä",
		"‚†ç‚†Å",
		"‚¢ã‚†Å",
		"‚°ã‚†Å",
		"‚†ç‚†â",
		"‚†ã‚†â",
		"‚†ã‚†â",
		"‚†â‚†ô",
		"‚†â‚†ô",
		"‚†â‚†©",
		"‚†à‚¢ô",
		"‚†à‚°ô",
		"‚¢à‚†©",
		"‚°Ä‚¢ô",
		"‚†Ñ‚°ô",
		"‚¢Ç‚†©",
		"‚°Ç‚¢ò",
		"‚†Ö‚°ò",
		"‚¢É‚†®",
		"‚°É‚¢ê",
		"‚†ç‚°ê",
		"‚¢ã‚††",
		"‚°ã‚¢Ä",
		"‚†ç‚°Å",
		"‚¢ã‚†Å",
		"‚°ã‚†Å",
		"‚†ç‚†â",
		"‚†ã‚†â",
		"‚†ã‚†â",
		"‚†â‚†ô",
		"‚†â‚†ô",
		"‚†â‚†©",
		"‚†à‚¢ô",
		"‚†à‚°ô",
		"‚†à‚†©",
		"‚†Ä‚¢ô",
		"‚†Ä‚°ô",
		"‚†Ä‚†©",
		"‚†Ä‚¢ò",
		"‚†Ä‚°ò",
		"‚†Ä‚†®",
		"‚†Ä‚¢ê",
		"‚†Ä‚°ê",
		"‚†Ä‚††",
		"‚†Ä‚¢Ä",
		"‚†Ä‚°Ä",
	}}
	return NewSpinner(configuration, writer)
}

// NewDots2Spinner creates a new dots2 spinner
func NewDots2Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚£æ",
		"‚£Ω",
		"‚£ª",
		"‚¢ø",
		"‚°ø",
		"‚£ü",
		"‚£Ø",
		"‚£∑",
	}}
	return NewSpinner(configuration, writer)
}

// NewDots3Spinner creates a new dots3 spinner
func NewDots3Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚†ã",
		"‚†ô",
		"‚†ö",
		"‚†û",
		"‚†ñ",
		"‚†¶",
		"‚†¥",
		"‚†≤",
		"‚†≥",
		"‚†ì",
	}}
	return NewSpinner(configuration, writer)
}

// NewDots4Spinner creates a new dots4 spinner
func NewDots4Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚†Ñ",
		"‚†Ü",
		"‚†á",
		"‚†ã",
		"‚†ô",
		"‚†∏",
		"‚†∞",
		"‚††",
		"‚†∞",
		"‚†∏",
		"‚†ô",
		"‚†ã",
		"‚†á",
		"‚†Ü",
	}}
	return NewSpinner(configuration, writer)
}

// NewDots5Spinner creates a new dots5 spinner
func NewDots5Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚†ã",
		"‚†ô",
		"‚†ö",
		"‚†í",
		"‚†Ç",
		"‚†Ç",
		"‚†í",
		"‚†≤",
		"‚†¥",
		"‚†¶",
		"‚†ñ",
		"‚†í",
		"‚†ê",
		"‚†ê",
		"‚†í",
		"‚†ì",
		"‚†ã",
	}}
	return NewSpinner(configuration, writer)
}

// NewDots6Spinner creates a new dots6 spinner
func NewDots6Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚†Å",
		"‚†â",
		"‚†ô",
		"‚†ö",
		"‚†í",
		"‚†Ç",
		"‚†Ç",
		"‚†í",
		"‚†≤",
		"‚†¥",
		"‚†§",
		"‚†Ñ",
		"‚†Ñ",
		"‚†§",
		"‚†¥",
		"‚†≤",
		"‚†í",
		"‚†Ç",
		"‚†Ç",
		"‚†í",
		"‚†ö",
		"‚†ô",
		"‚†â",
		"‚†Å",
	}}
	return NewSpinner(configuration, writer)
}

// NewDots7Spinner creates a new dots7 spinner
func NewDots7Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚†à",
		"‚†â",
		"‚†ã",
		"‚†ì",
		"‚†í",
		"‚†ê",
		"‚†ê",
		"‚†í",
		"‚†ñ",
		"‚†¶",
		"‚†§",
		"‚††",
		"‚††",
		"‚†§",
		"‚†¶",
		"‚†ñ",
		"‚†í",
		"‚†ê",
		"‚†ê",
		"‚†í",
		"‚†ì",
		"‚†ã",
		"‚†â",
		"‚†à",
	}}
	return NewSpinner(configuration, writer)
}

// NewDots8Spinner creates a new dots8 spinner
func NewDots8Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚†Å",
		"‚†Å",
		"‚†â",
		"‚†ô",
		"‚†ö",
		"‚†í",
		"‚†Ç",
		"‚†Ç",
		"‚†í",
		"‚†≤",
		"‚†¥",
		"‚†§",
		"‚†Ñ",
		"‚†Ñ",
		"‚†§",
		"‚††",
		"‚††",
		"‚†§",
		"‚†¶",
		"‚†ñ",
		"‚†í",
		"‚†ê",
		"‚†ê",
		"‚†í",
		"‚†ì",
		"‚†ã",
		"‚†â",
		"‚†à",
		"‚†à",
	}}
	return NewSpinner(configuration, writer)
}

// NewDots9Spinner creates a new dots9 spinner
func NewDots9Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚¢π",
		"‚¢∫",
		"‚¢º",
		"‚£∏",
		"‚£á",
		"‚°ß",
		"‚°ó",
		"‚°è",
	}}
	return NewSpinner(configuration, writer)
}

// NewDqpbSpinner creates a new dqpb spinner
func NewDqpbSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"d",
		"q",
		"p",
		"b",
	}}
	return NewSpinner(configuration, writer)
}

// NewEarthSpinner creates a new earth spinner
func NewEarthSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 180, Frames: []string{
		"üåç ",
		"üåé ",
		"üåè ",
	}}
	return NewSpinner(configuration, writer)
}

// NewFlipSpinner creates a new flip spinner
func NewFlipSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 70, Frames: []string{
		"_",
		"_",
		"_",
		"-",
		"`",
		"`",
		"&#39;",
		"¬¥",
		"-",
		"_",
		"_",
		"_",
	}}
	return NewSpinner(configuration, writer)
}

// NewGrowHorizontalSpinner creates a new growHorizontal spinner
func NewGrowHorizontalSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 120, Frames: []string{
		"‚ñè",
		"‚ñé",
		"‚ñç",
		"‚ñå",
		"‚ñã",
		"‚ñä",
		"‚ñâ",
		"‚ñä",
		"‚ñã",
		"‚ñå",
		"‚ñç",
		"‚ñé",
	}}
	return NewSpinner(configuration, writer)
}

// NewGrowVerticalSpinner creates a new growVertical spinner
func NewGrowVerticalSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 120, Frames: []string{
		"‚ñÅ",
		"‚ñÉ",
		"‚ñÑ",
		"‚ñÖ",
		"‚ñÜ",
		"‚ñá",
		"‚ñÜ",
		"‚ñÖ",
		"‚ñÑ",
		"‚ñÉ",
	}}
	return NewSpinner(configuration, writer)
}

// NewHamburgerSpinner creates a new hamburger spinner
func NewHamburgerSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚ò±",
		"‚ò≤",
		"‚ò¥",
	}}
	return NewSpinner(configuration, writer)
}

// NewHeartsSpinner creates a new hearts spinner
func NewHeartsSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"üíõ ",
		"üíô ",
		"üíú ",
		"üíö ",
		"‚ù§Ô∏è ",
	}}
	return NewSpinner(configuration, writer)
}

// NewLineSpinner creates a new line spinner
func NewLineSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 130, Frames: []string{
		"-",
		"\\",
		"|",
		"/",
	}}
	return NewSpinner(configuration, writer)
}

// NewLine2Spinner creates a new line2 spinner
func NewLine2Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚†Ç",
		"-",
		"‚Äì",
		"‚Äî",
		"‚Äì",
		"-",
	}}
	return NewSpinner(configuration, writer)
}

// NewMonkeySpinner creates a new monkey spinner
func NewMonkeySpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 300, Frames: []string{
		"üôà ",
		"üôà ",
		"üôâ ",
		"üôä ",
	}}
	return NewSpinner(configuration, writer)
}

// NewMoonSpinner creates a new moon spinner
func NewMoonSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"üåë ",
		"üåí ",
		"üåì ",
		"üåî ",
		"üåï ",
		"üåñ ",
		"üåó ",
		"üåò ",
	}}
	return NewSpinner(configuration, writer)
}

// NewNoiseSpinner creates a new noise spinner
func NewNoiseSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚ñì",
		"‚ñí",
		"‚ñë",
	}}
	return NewSpinner(configuration, writer)
}

// NewPipeSpinner creates a new pipe spinner
func NewPipeSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚î§",
		"‚îò",
		"‚î¥",
		"‚îî",
		"‚îú",
		"‚îå",
		"‚î¨",
		"‚îê",
	}}
	return NewSpinner(configuration, writer)
}

// NewPongSpinner creates a new pong spinner
func NewPongSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚ñê‚†Ç       ‚ñå",
		"‚ñê‚†à       ‚ñå",
		"‚ñê ‚†Ç      ‚ñå",
		"‚ñê ‚††      ‚ñå",
		"‚ñê  ‚°Ä     ‚ñå",
		"‚ñê  ‚††     ‚ñå",
		"‚ñê   ‚†Ç    ‚ñå",
		"‚ñê   ‚†à    ‚ñå",
		"‚ñê    ‚†Ç   ‚ñå",
		"‚ñê    ‚††   ‚ñå",
		"‚ñê     ‚°Ä  ‚ñå",
		"‚ñê     ‚††  ‚ñå",
		"‚ñê      ‚†Ç ‚ñå",
		"‚ñê      ‚†à ‚ñå",
		"‚ñê       ‚†Ç‚ñå",
		"‚ñê       ‚††‚ñå",
		"‚ñê       ‚°Ä‚ñå",
		"‚ñê      ‚†† ‚ñå",
		"‚ñê      ‚†Ç ‚ñå",
		"‚ñê     ‚†à  ‚ñå",
		"‚ñê     ‚†Ç  ‚ñå",
		"‚ñê    ‚††   ‚ñå",
		"‚ñê    ‚°Ä   ‚ñå",
		"‚ñê   ‚††    ‚ñå",
		"‚ñê   ‚†Ç    ‚ñå",
		"‚ñê  ‚†à     ‚ñå",
		"‚ñê  ‚†Ç     ‚ñå",
		"‚ñê ‚††      ‚ñå",
		"‚ñê ‚°Ä      ‚ñå",
		"‚ñê‚††       ‚ñå",
	}}
	return NewSpinner(configuration, writer)
}

// NewRunnerSpinner creates a new runner spinner
func NewRunnerSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 140, Frames: []string{
		"üö∂ ",
		"üèÉ ",
	}}
	return NewSpinner(configuration, writer)
}

// NewSharkSpinner creates a new shark spinner
func NewSharkSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 120, Frames: []string{
		"‚ñê|\\____________‚ñå",
		"‚ñê_|\\___________‚ñå",
		"‚ñê__|\\__________‚ñå",
		"‚ñê___|\\_________‚ñå",
		"‚ñê____|\\________‚ñå",
		"‚ñê_____|\\_______‚ñå",
		"‚ñê______|\\______‚ñå",
		"‚ñê_______|\\_____‚ñå",
		"‚ñê________|\\____‚ñå",
		"‚ñê_________|\\___‚ñå",
		"‚ñê__________|\\__‚ñå",
		"‚ñê___________|\\_‚ñå",
		"‚ñê____________|\\‚ñå",
		"‚ñê____________/|‚ñå",
		"‚ñê___________/|_‚ñå",
		"‚ñê__________/|__‚ñå",
		"‚ñê_________/|___‚ñå",
		"‚ñê________/|____‚ñå",
		"‚ñê_______/|_____‚ñå",
		"‚ñê______/|______‚ñå",
		"‚ñê_____/|_______‚ñå",
		"‚ñê____/|________‚ñå",
		"‚ñê___/|_________‚ñå",
		"‚ñê__/|__________‚ñå",
		"‚ñê_/|___________‚ñå",
		"‚ñê/|____________‚ñå",
	}}
	return NewSpinner(configuration, writer)
}

// NewSimpleDotsSpinner creates a new simpleDots spinner
func NewSimpleDotsSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 400, Frames: []string{
		".  ",
		".. ",
		"...",
		"   ",
	}}
	return NewSpinner(configuration, writer)
}

// NewSimpleDotsScrollingSpinner creates a new simpleDotsScrolling spinner
func NewSimpleDotsScrollingSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 200, Frames: []string{
		".  ",
		".. ",
		"...",
		" ..",
		"  .",
		"   ",
	}}
	return NewSpinner(configuration, writer)
}

// NewSmileySpinner creates a new smiley spinner
func NewSmileySpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 200, Frames: []string{
		"üòÑ ",
		"üòù ",
	}}
	return NewSpinner(configuration, writer)
}

// NewSquareCornersSpinner creates a new squareCorners spinner
func NewSquareCornersSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 180, Frames: []string{
		"‚ó∞",
		"‚ó≥",
		"‚ó≤",
		"‚ó±",
	}}
	return NewSpinner(configuration, writer)
}

// NewSquishSpinner creates a new squish spinner
func NewSquishSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚ï´",
		"‚ï™",
	}}
	return NewSpinner(configuration, writer)
}

// NewStarSpinner creates a new star spinner
func NewStarSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 70, Frames: []string{
		"‚ú∂",
		"‚ú∏",
		"‚úπ",
		"‚ú∫",
		"‚úπ",
		"‚ú∑",
	}}
	return NewSpinner(configuration, writer)
}

// NewStar2Spinner creates a new star2 spinner
func NewStar2Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"&#43;",
		"x",
		"*",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggleSpinner creates a new toggle spinner
func NewToggleSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 250, Frames: []string{
		"‚ä∂",
		"‚ä∑",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle10Spinner creates a new toggle10 spinner
func NewToggle10Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"„äÇ",
		"„äÄ",
		"„äÅ",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle11Spinner creates a new toggle11 spinner
func NewToggle11Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 50, Frames: []string{
		"‚ßá",
		"‚ßÜ",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle12Spinner creates a new toggle12 spinner
func NewToggle12Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 120, Frames: []string{
		"‚òó",
		"‚òñ",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle13Spinner creates a new toggle13 spinner
func NewToggle13Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"=",
		"*",
		"-",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle2Spinner creates a new toggle2 spinner
func NewToggle2Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚ñ´",
		"‚ñ™",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle3Spinner creates a new toggle3 spinner
func NewToggle3Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 120, Frames: []string{
		"‚ñ°",
		"‚ñ†",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle4Spinner creates a new toggle4 spinner
func NewToggle4Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚ñ†",
		"‚ñ°",
		"‚ñ™",
		"‚ñ´",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle5Spinner creates a new toggle5 spinner
func NewToggle5Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚ñÆ",
		"‚ñØ",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle6Spinner creates a new toggle6 spinner
func NewToggle6Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 300, Frames: []string{
		"·Äù",
		"·ÅÄ",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle7Spinner creates a new toggle7 spinner
func NewToggle7Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 80, Frames: []string{
		"‚¶æ",
		"‚¶ø",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle8Spinner creates a new toggle8 spinner
func NewToggle8Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚óç",
		"‚óå",
	}}
	return NewSpinner(configuration, writer)
}

// NewToggle9Spinner creates a new toggle9 spinner
func NewToggle9Spinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚óâ",
		"‚óé",
	}}
	return NewSpinner(configuration, writer)
}

// NewTriangleSpinner creates a new triangle spinner
func NewTriangleSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 50, Frames: []string{
		"‚ó¢",
		"‚ó£",
		"‚ó§",
		"‚ó•",
	}}
	return NewSpinner(configuration, writer)
}

// NewWeatherSpinner creates a new weather spinner
func NewWeatherSpinner(writer io.Writer) *Spinner {
	configuration := Configuration{Interval: 100, Frames: []string{
		"‚òÄÔ∏è ",
		"‚òÄÔ∏è ",
		"‚òÄÔ∏è ",
		"üå§ ",
		"‚õÖÔ∏è ",
		"üå• ",
		"‚òÅÔ∏è ",
		"üåß ",
		"üå® ",
		"üåß ",
		"üå® ",
		"üåß ",
		"üå® ",
		"‚õà ",
		"üå® ",
		"üåß ",
		"üå® ",
		"‚òÅÔ∏è ",
		"üå• ",
		"‚õÖÔ∏è ",
		"üå§ ",
		"‚òÄÔ∏è ",
		"‚òÄÔ∏è ",
	}}
	return NewSpinner(configuration, writer)
}
